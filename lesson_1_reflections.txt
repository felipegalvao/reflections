How did viewing a diff between two versions of a file help you see the bug that
was introduced?

  The diff showed what modifications were made, allowing us to spot where the bug
  was introduced more easily

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

  This can help, as bugs sometimes are introduced but are only spotted some
  time latter. With the complete history, we can check all the changes ever
  made to a file and see where some bug was introduced.

What do you think are the pros and cons of manually choosing when to create
a commit, like you do in Git, vs having versions automatically saved, like
Google Docs does?

  With manual commits, the versions of your file always follow a logic defined
  by you. The drawback is that you have to decide when to make each commit, and
  you can always forget to commit one time or another.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

  In my opinion, this is related to the focus / objective of each tool. Google
  Docs is essentially an Office suite, and for that objective, treating files
  separately is probably the best option. For a version control tool like Git,
  multiple files in a commit is probably the best way, so that you can see the
  logic of a project in a general way.

How can you use the commands git log and git diff to view the history of files?

  You can use git log to see what commits were made and for what they were
  made, and git diff to see the difference on files between two commits.
